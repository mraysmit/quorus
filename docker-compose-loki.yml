version: '3.8'

services:
  # Loki for log storage
  loki:
    image: grafana/loki:2.9.0
    container_name: quorus-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki/config.yml:/etc/loki/local-config.yaml
      - loki-data:/loki
    networks:
      - logging

  # Promtail for log collection
  promtail:
    image: grafana/promtail:2.9.0
    container_name: quorus-promtail
    volumes:
      - ./promtail/config.yml:/etc/promtail/config.yml
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - logging

  # Grafana for visualization
  grafana:
    image: grafana/grafana:10.2.0
    container_name: quorus-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - loki
    networks:
      - logging

  # Prometheus for metrics (optional)
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: quorus-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - logging

networks:
  logging:
    driver: bridge

volumes:
  loki-data:
    driver: local
  grafana-data:
    driver: local
  prometheus-data:
    driver: local
